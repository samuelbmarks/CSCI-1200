#include <iostream>
#include <string>
#include <list>
#include<stdio.h>
#include<stdlib.h>

template <class T>
void print(typename std::list<T> &data, const std::string &label) {
  std::cout << label << " ";

  typename std::list<T>::const_iterator i;
  for (i = data.begin(); i != data.end(); ++i) {
    std::cout << " " << *i;
  }
  std::cout << std::endl;
}


template <class T>
void reverse(typename std::list<T> &data) {

  if (data.size() == 0 || data.size() == 1) {
		return;
	}

	T temp;
	std::string temp2;
	int counter = 0;
	int max = data.size() / 2;
	typename std::list<T>::iterator i;
	typename std::list<T>::reverse_iterator ri;

	for (i = data.begin(), ri = data.rbegin(); i != data.end(), ri != data.rend(); ++i, ++ri) {
		if (counter >= max) {
			return;
		}

		 temp = *i;
		*i = *ri;
		*ri = temp;


		counter += 1;
	}

}

//template <class T>
//void reverse(typename std::list<T> &data) {
/*
  if (data.size() == 0 || data.size() == 1) {
		return;
	}

	T temp;
	std::string temp2;
	int counter = 0;
	int max = data.size() / 2;
	typename std::list<T>::iterator i;
	typename std::list<T>::reverse_iterator ri;

	for (i = data.begin(), ri = data.rbegin(); i != data.end(), ri != data.rend(); ++i, ++ri) {
		if (counter >= max) {
			return;
		}

		 temp = *i;
		*i = *ri;
		*ri = temp;


		counter += 1;
	}

}
*/

int main() {
  std::list<int> data;
  data.push_back(1);
  data.push_back(2);
  data.push_back(3);
  data.push_back(4);
  data.push_back(5);
  data.push_back(6);
  data.push_back(7);

  print(data,"before:");
  reverse(data);
  print(data,"after: ");

  std::list<std::string> data2;
  data2.push_back("apple");
  data2.push_back("banana");
  data2.push_back("carrot");
  data2.push_back("date");

  print(data2,"before:");
  reverse(data2);
  print(data2,"after: ");
}
